% \iffalse meta-comment
% vim: textwidth=75
%<*internal>
\iffalse
%</internal>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
-------:| -----------------------------------------------------------------
  gurps:| A LaTeX package for GURPS typesetting
 Author:| Nathanael Farley
 E-mail:| nasfarley88@gmail.com
License:| Released under the LaTeX Project Public License v1.3c or later
    See:| http://www.latex-project.org/lppl.txt

\endpreamble
\postamble

Copyright (C) 2017-2018 by Nathanael Farley <nasfarley88@gmail.com>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Nathanael Farley.

This work consists of the file gurps.dtx and a Makefile.
Running "make" generates the derived files README, gurps.pdf and gurps.sty.
Running "make inst" installs the files in the user's TeX tree.
Running "make install" installs the files in the local TeX tree.

\endpostamble

\usedir{tex/latex/gurps}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/gurps}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/gurps}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{gurps.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<package>\ProvidesPackage{gurps}
%<*package>
    [1970/01/01 v0.3 A LaTeX package for GURPS typesetting]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage{hypdoc}
\usepackage[a4paper,margin=25mm,left=50mm,nohead]{geometry}
\usepackage{tcolorbox}
\usepackage{tabularx}
\usepackage{graphicx}
\usepackage{\jobname}

\usepackage[condensed,sfdefault]{universalis}
\usepackage{inconsolata}
\setmonofont{Inconsolatazi4}[
  Scale=0.93
] % or whatever font you prefer

\NewDocumentEnvironment{centerquote}{}{%
  \begin{center}\begin{minipage}{0.8\linewidth}\centering%
    }{%
    \end{minipage}\end{center}%
}

\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
% \DoNotIndex{\newcommand,\newenvironment,\NewDocumentEnvironment,\NewDocumentCommand}
%
% \title{\textsf{gurps} --- A LaTeX package for GURPS typesetting\thanks{This file
% describes version \fileversion, last revised \filedate.}
%}
%\author{Nathana\null el Farley\thanks{E-mail: nasfarley88@gmail.com}}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v0.1}{2018/02/13}{First public release}
%\changes{v0.1.1}{2018/02/14}{Minor changes to CTAN upload}
%\changes{v0.2}{2018/03/04}{Better character environment; \cs{gurpsbook} command added.}
%\changes{v0.3}{1970/01/01}{Completely changed underlying character lua
%structure. Removed lens environment (to be put in at a later date). TODO}
%
% \begin{abstract}
%   \textit{\textbf{GURPS}} is an excellent RPG system. \LaTeX{} is an excellent
%   typesetting system. Together, they make excellent game aids. At least, they
%   can with this package!
% \end{abstract}
%
% \tableofcontents
% 
% \section{Motivation}
%
% I often like to make \gurps game aids for my own games. Over time, I started
% to collect various macros that made it easier. Eventually, I had enough game
% aids that I decided to write the macros up in a package, then I realised I
% could release on CTAN and share the \gurps goodness!
%
%
%\section{Quickstart}
% A brief overview of the commands in this package can be found in \autoref{tab:basic-commands}.
% \begin{table}[t]
%   \centering
%   \caption{Basic commands in \texttt{gurps} package.}
%   \label{tab:basic-commands}
%   \small
%   \begin{tabularx}{0.99\linewidth}{lX}\hline
%       \textbf{Macro} & \textbf{Example} \\\hline
%       \cs{dice}\marg{no.~of~dice}\oarg{modifier} & \dice{3}[2] \\\hline
%       \cs{gurpsbook}\marg{name of book}\oarg{page(s)} & \gurpsbook{Zombies}[1] \\\hline
%       \cs{gurps} & \gurps \\\hline
%       \cs{SJGamesOnlinePolicyDisclaimer} & \SJGamesOnlinePolicyDisclaimer\\\hline
%       \cs{SJGamesOnlinePolicyNotice} & \SJGamesOnlinePolicyNotice\\\hline
%       \scalebox{0.8}[1]{\cs{SJGamesOnlinePolicyGameAid}}\marg{author name} & \SJGamesOnlinePolicyGameAid{AUTHOR NAME}\\\hline
%       \texttt{character} environment, \cs{ST}, \cs{advantage}, etc. &  See \autoref{sec:character-creation}
%     \end{tabularx}
%   \end{table}
%
%
% \section{In-depth usage}
% The macros in this package can be divided into roughly three sections:
% \begin{enumerate}
% \item character creation
% \item common typographical features of \gurps
% \item macros for abiding by SJGames online policy
% \end{enumerate}
%
% \subsection{Character creation}
% \label{sec:character-creation}
%
% \DescribeEnv{character}
% Character (i.e.~NPCs) creation can be tricky and involve a \emph{lot} of
% boilerplate code. This package provides most of the boilerplate code so you
% only specify what is \emph{different} from assumed values (e.g.~If your
% character has a ST~13 but DX~10, IQ~10, HT~10, you only need to specify ST)
%
% It is not currently possible to (easily) change the look of the stats block
% for the |character| environment. This is planned for a future release.
%
% \begin{tcolorbox}[title={\emph{Warning!}}]
%   This feature is still in alpha. The external API (\cs{skill},
%   \cs{advantage}, etc.) should not change, but the internal \TeX\ and layout
%   is \emph{very} likely to change.
% \end{tcolorbox}
%
% On to an example\footnote{Any resemblance to Napolean Dynamite is completely
% \ldots{} intentional!}:
%
% \begin{verbatim}
% \begin{character}
%   \ST{9}
%   \HP{12}
%   \advantage{Natural afro}[1]
%   \disadvantage{Big teeth}[-1]
%   \skill{Nunchuck}[DX/Easy]{16}
% \end{character}
% \end{verbatim}
%
% creates \ldots{}
%
% \begin{character}
%   \HP{12}
%   \ST{9}
%   \advantage{Natural afro}[1]
%   \advantage{\TeX-nical afro}[1]
%   \disadvantage{Big teeth}[-1]
%   \skill{Nunchuck}[DX/Easy]{16}
% \end{character}
%
%
% \subsection{Typographical features}
% \label{sec:typographical-features}
%
% \DescribeMacro{\dice}
% Using the \cs{dice}\marg{no.\ of dice}\oarg{modifier} provides dice notation
% consistent with \gurps materials. E.g.
% \begin{center}
%   |\dice{3}| \(\rightarrow\) \dice{3}\\
%   |\dice{4}[-1]| \(\rightarrow\) \dice{4}[-1]\\
%   |\dice{2}[1]| \(\rightarrow\) \dice{2}[1]
% \end{center}
%
% \DescribeMacro{\gurpsbook}
% The command \cs{gurpsbook}\marg{book name}\oarg{page number(s)} formats \gurps
% books like \SJGames. E.g.
% 
% \begin{center}
%   |\gurpsbook{High Tech}| \(\rightarrow\) \gurpsbook{High Tech}\\
%   |\gurpsbook{Zombies}[3]| \(\rightarrow\) \gurpsbook{Zombies}[3]\\
%   |\gurpsbook{Warehouse~23}[1, 3--5]| \(\rightarrow\) \gurpsbook{Warehouse~23}[1, 3--5]\\
% \end{center}
%
%
% \subsection{Online policy macros}
% \label{sec:online-policy-macros}
%
% \DescribeMacro{\SJGamesOnlinePolicyDisclaimer}
% \DescribeMacro{\SJGamesOnlinePolicyNotice}
% \DescribeMacro{\SJGamesOnlinePolicyGameAid}
% The macros \cs{SJGamesOnlinePolicyDisclaimer}, \cs{SJGamesOnlinePolicyNotice}
% and \linebreak\cs{SJGamesOnlinePolicyGameAid}\marg{author name} provide common
% boilerplate statements taken directly from
% \href{http://www.sjgames.com/general/online_policy.html}{SJGames online policy}
% with small modifications to make them more suitable to game aids
% created with \textsc{Lua}\LaTeX.
% 
% \DescribeMacro{\gurps}
% The command \cs{gurps} is also included to provide bold and italicised \gurps
% as requested in the online policy
%
%
% \subsubsection{\cs{SJGamesOnlinePolicyDisclaimer} text}
% Using the code |\SJGamesOnlinePolicyDisclaimer| produces the text:
% 
% \begin{centerquote}
%   \SJGamesOnlinePolicyDisclaimer
% \end{centerquote}
% 
% \subsubsection{\cs{SJGamesOnlinePolicyNotice} text}
% Using the code |\SJGamesOnlinePolicyOnlineNotice| produces the text:
%
% \begin{centerquote}
%   \SJGamesOnlinePolicyNotice
% \end{centerquote}
%
% \subsubsection{\cs{SJGamesOnlinePolicyGameAid} text}
% Using the code |\SJGamesOnlinePolicyGameAid{NAME}| produces the text:
% 
% \begin{centerquote}
%   \SJGamesOnlinePolicyGameAid{NAME}
% \end{centerquote}
%
%
%
%
%\StopEventually{^^A
%  \PrintChanges
%  \PrintIndex
%}
%
% \section{Implementation}
% Loading required libraries and the lua logic for this class.
%    \begin{macrocode}
%<*package>
\RequirePackage{xparse}
\RequirePackage{xspace}
\RequirePackage{luacode}
\RequirePackage{tikz}
\RequirePackage{calc}
\PassOptionsToPackage{inline}{enumitem}
\RequirePackage[inline]{enumitem}

\RequirePackage{hyperref}
\RequirePackage{xstring}

\luadirect{require("gurps.lua")}
\luadirect{require("gurps_character.lua")}
%    \end{macrocode}
% \begin{macro}{\gurps}
% Steve Jackson Games asks that the name \textbf{\textit{GURPS}} is always in
% bold and italicised. This macro provides that.
%    \begin{macrocode}
\NewDocumentCommand{\gurps}{s}{%
    \IfBooleanTF#1
    % With star
    {\href{http://www.sjgames.com/gurps/}{\textbf{\textit{GURPS}}\xspace}}
    % Without star
    {\textbf{\textit{GURPS}}\xspace}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\dice}
% Notates dice in the \gurps way (e.g. drops the |6| from |d6|) and puts it in %
% an |\mbox|. First argument number of dice. Second argument is a modifier and
% optional. E.g.~|\dice{3}[1]|
% creates \mbox{3d+1}.
%    \begin{macrocode}
\NewDocumentCommand{\dice}{mO{0}}{%
  \luadirect{print_dice([[#1]], [[#2]])}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@porpp}
% Helper macro to print pp.\ or p.\ when listing page numbers
%    \begin{macrocode}
\NewDocumentCommand{\gurps@porpp}{m}{\IfInteger{#1}{p.}{pp.}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurpsbook}
% Works like this: \gurpsbook{Horror}[45] or \gurpsbook{Banestorm}[3, 45--48]
%    \begin{macrocode}
\NewDocumentCommand{\gurpsbook}{mo}{%
  \textbf{\textit{\gurps #1}}\IfValueT{#2}{ \gurps@porpp{#2}~#2}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\SJGames}
%    \begin{macrocode}
\NewDocumentCommand{\SJGames}{s}{%
    \IfBooleanTF#1%
    % With star
    {\href{http://www.sjgames.com/}{Steve~Jackson~Games}\xspace}%
    % Without star
    {Steve~Jackson~Games\xspace}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\SJGamesOnlinePolicyDisclaimer}
%    \begin{macrocode}
\NewDocumentCommand{\SJGamesOnlinePolicyDisclaimer}{}{%
  The material presented here is my original creation, intended for use with the
  \gurps* system from \SJGames*. This material is not official and is
  not endorsed by \SJGames.
}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\SJGamesOnlinePolicyDisclaimer}
% The disclaimer \emph{almost} as it appears on the online policy. The words
% `the art' have been removed since by default no art (including logos) are
% included in \LaTeX{} documents.
%    \begin{macrocode}
\NewDocumentCommand{\SJGamesOnlinePolicyNotice}{}{%
  \gurps* is a registered trademark of \SJGames*, and is copyrighted by
  \SJGames. All rights are reserved by \SJGames. This material is used
  here in accordance with the SJ Games
  \href{http://www.sjgames.com/general/online_policy.html}{online policy}.
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\SJGamesOnlinePolicyGameAid}
% This text is required for all game aid's produced for \textbf{\textit{GURPS}} but without an
% official license. It takes one argument: author name.
%    \begin{macrocode}
\NewDocumentCommand{\SJGamesOnlinePolicyGameAid}{m}{%
  \gurps* is a trademark of \SJGames*, and its rules and art are
  copyrighted by \SJGames*. All rights are reserved by
  \SJGames. This game aid is the original creation of #1 and
  is released for free distribution, and not for resale, under the
  permissions granted in the
  \href{http://www.sjgames.com/general/online_policy.html}%
        {\SJGames Online Policy}.
}
%    \end{macrocode}
% \end{macro}
%
%\subsection{Character environment}
%\label{sec:character-environment}
%
% \begin{macro}{\SetCharacterKey}
% Sets the key for the current character. This acts like a variable name but
% only for characters.
%    \begin{macrocode}
\NewDocumentCommand{\SetCharacterKey}{m}{%
  \luadirect{_GCHARACTERKEY = \luastring{\unexpanded{#1}}}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ResetCharacterKey}
% Resets the character key to |_|.
%    \begin{macrocode}
\NewDocumentCommand{\ResetCharacterKey}{}{%
  \SetCharacterKey{_}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{character}
% This environment defines a `character' i.e.~anything with full stats. It takes
% an \oarg{character key} which provides a means to access the character later
% in the file. It is set with \cs{SetCharacterKey} and reset with
% \cs{ResetCharacterKey}. In order to access the character later, just use
% \cs{SetCharacterKey}\marg{character key}, use the commands (e.g.
% \cs{gurps@char@advantages}) and then reset\footnote{Although resetting is not
% strictly necessary, global variables are a Bad Thing\texttrademark{} so we
% reset in order to emulate some kind of scope. Resetting just changes the
% character key to \_.}.
%    \begin{macrocode}
\NewDocumentEnvironment{character}{O{_}}{%
  \SetCharacterKey{#1}
  \luadirect{new_character(_GCHARACTERKEY)}
}{%
  \gurps@char@checkandfixattrsandpoints

  \charactersection*{Basic Attributes}
  \gurps@char@basicattributes
  \charactersection*{Secondary Characteristics}
  \gurps@char@secondarycharacteristics
  \charactersection*{Other}
  \gurps@char@properties
  \charactersection*{Advantages}
  \gurps@char@advantages
  \charactersection*{Disadvantages}
  \gurps@char@disadvantages
  \charactersection*{Skills}
  \gurps@char@skills
  \charactersection*{Spells}
  \gurps@char@spells
  \ResetCharacterKey
}
%    \end{macrocode}
% \end{environment}
% 
% \begin{macro}{\gurps@char@insertattr}
% Macro for inserting an attribute to the character.
%    \begin{macrocode}
\define@key{gurps@char@insertattr}{name}{%
  \def\gurps@char@insertattr@name{\unexpanded{[[#1]]}}}
\define@key{gurps@char@insertattr}{type}{%
  \def\gurps@char@insertattr@type{\unexpanded{[[#1]]}}}
\define@key{gurps@char@insertattr}{level}{%
  \def\gurps@char@insertattr@level{#1}}
\define@key{gurps@char@insertattr}{points}{%
  \def\gurps@char@insertattr@points{#1}}
\define@key{gurps@char@insertattr}{basedon}{%
  \def\gurps@char@insertattr@basedon{\unexpanded{[[#1]]}}}
\define@key{gurps@char@insertattr}{difficulty}{%
  \def\gurps@char@insertattr@difficulty{\unexpanded{[[#1]]}}}
\NewDocumentCommand{\gurps@char@insertattr}{m}{
  \def\@myenvname{character}
  \ifx\@currenvir\@myenvname
  % pass
  \else
  \PackageError{gurps}{Not in character environment! Currently in \@currenvir{} environment.}{}
  \fi

  \setkeys{gurps@char@insertattr}{
    name=NotSet,
    type=NotSet,
    points=nil,
    level=nil,
    basedon=DX,
    difficulty=NotSet
  }

  \setkeys{gurps@char@insertattr}{#1}

  \luadirect{x = {
      name=\gurps@char@insertattr@name,
      type=\gurps@char@insertattr@type,
      points=\gurps@char@insertattr@points,
      level=\gurps@char@insertattr@level,
      basedon=\gurps@char@insertattr@basedon,
      difficulty=\gurps@char@insertattr@difficulty
    }
  }
  \luadirect{
    if_else_packageerror(
      function() return is_valid_type(x.type) end,
      "Type '" .. x.type .. "' is not a valid attribute type!"
        .. " Did you remember to set the type?"
    )
    if_else_packageerror(
      function() return is_valid_points(x.points) end,
      "Points value '" .. tostring(x.points) .. "' is not valid!"
    )
    if x.type == "skill" or x.type == "spell" then 
      if_else_packageerror(
        function() return is_valid_difficulty(x.difficulty) end,
        "Difficulty value '" .. x.difficulty .. "' is not valid!"
      )
    end
    insert_attr(_GCHARACTERKEY, x)
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\printcharacter}
% (This function is mostly for debug at the moment)
%    \begin{macrocode}
\NewDocumentCommand{\printcharacter}{m}{
  \SetCharacterKey{#1}
  \charactersection*{Basic Attributes}
  \gurps@char@basicattributes
  \charactersection*{Secondary Characteristics}
  \gurps@char@secondarycharacteristics
  \charactersection*{Other}
  \gurps@char@properties
  \charactersection*{Advantages}
  \gurps@char@advantages
  \charactersection*{Disadvantages}
  \gurps@char@disadvantages
  \charactersection*{Skills}
  \gurps@char@skills
  \charactersection*{Spells}
  \gurps@char@spells
  \ResetCharacterKey
}
%    \end{macrocode}
% \end{macro}
%\subsubsection{Basic attributes}
%\label{sec:basic-attributes}
%
% \begin{macro}{\ST}
% Sets the strength of the current character
%    \begin{macrocode}
\NewDocumentCommand{\ST}{mO{nil}}{
  \gurps@char@insertattr{
    name=ST,
    type=basic_attribute,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\DX}
% Sets the dexterity of the current character
%    \begin{macrocode}
\NewDocumentCommand{\DX}{mO{nil}}{%
  \gurps@char@insertattr{
    name=DX,
    type=basic_attribute,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\IQ}
% Sets the IQ of the current character
%    \begin{macrocode}
\NewDocumentCommand{\IQ}{mO{nil}}{%
  \gurps@char@insertattr{
    name=IQ,
    type=basic_attribute,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\HT}
% Sets the health of the current character
%    \begin{macrocode}
\NewDocumentCommand{\HT}{mO{nil}}{%
  \gurps@char@insertattr{
    name=HT,
    type=basic_attribute,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}
%
%
%\subsubsection{Secondary Characteristics}
%\label{sec:secondary-characteristics}
%
% This section defines secondary characteristics (as \gurpsbook{Basic Set}).
% Points are set in a later function \cs{gurps@char@checkandfixattrsandpoints}
% if they are not set here.
% 
% \begin{macro}{\HP}
% Sets the HP of the current character
%    \begin{macrocode}
\NewDocumentCommand{\HP}{mO{nil}}{%
  \gurps@char@insertattr{
    name=HP,
    type=secondary_characteristic,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\Per}
% Sets the perception of the current character
%    \begin{macrocode}
\NewDocumentCommand{\Per}{mO{nil}}{%
  \gurps@char@insertattr{
    name=Per,
    type=secondary_characteristic,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\Will}
% Sets the will of the current character
%    \begin{macrocode}
\NewDocumentCommand{\Will}{mO{nil}}{%
  \gurps@char@insertattr{
    name=Will,
    type=secondary_characteristic,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\FP}
% Sets the FP of the current character
%    \begin{macrocode}
\NewDocumentCommand{\FP}{mO{nil}}{%
  \gurps@char@insertattr{
    name=FP,
    type=secondary_characteristic,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\SM}
% Sets the SM of the current character
%    \begin{macrocode}
\NewDocumentCommand{\SM}{m}{%
  \gurps@char@insertattr{
    name=SM,
    type=property,
    level=#1
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\DR}
% Sets the DR of the current character
%    \begin{macrocode}
\NewDocumentCommand{\DR}{m}{
  \gurps@char@insertattr{
    name=DR,
    type=property,
    level=#1
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\basicspeed}
% Sets the Basic Speed of the current character
%    \begin{macrocode}
\NewDocumentCommand{\basicspeed}{mO{nil}}{
  \gurps@char@insertattr{
    name={Basic Speed},
    type=secondary_characteristic,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\basicmove}
% Sets the Basic Move of the current character
%    \begin{macrocode}
\NewDocumentCommand{\basicmove}{mO{nil}}{
  \gurps@char@insertattr{
    name={Basic Move},
    type=secondary_characteristic,
    level=#1,
    points=#2
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\advantage}
% Adds an advantage to a character. NOTE: this only works in a |character|.
%    \begin{macrocode}
\NewDocumentCommand{\advantage}{mO{nil}}{%
  \gurps@char@insertattr{%
    name={#1},%
    type=advantage,%
    points=#2%
  }%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\disadvantage}
% Adds a disadvantage to a character. NOTE: this only works in a |character| or
% |lens| environment.
%    \begin{macrocode}
\NewDocumentCommand{\disadvantage}{mO{nil}}{%
  \gurps@char@insertattr{%
    name={#1},%
    type=disadvantage,%
    points=#2%
  }%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\levelledadvantage}
% Adds an advantage to a character. NOTE: this only works in a |character| or
% |lens| environment.
%    \begin{macrocode}
% TODO finish this!
\NewDocumentCommand{\levelledadvantage}{mmO{nil}}{%
  \gurps@char@insertattr{%
    name={#1},%
    type=advantage,%
    level=#2,
    points=#3%
  }%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\levelleddisadvantage}
% Adds a disadvantage to a character. NOTE: this only works in a |character| or
% |lens| environment.
%    \begin{macrocode}
\NewDocumentCommand{\levelleddisadvantage}{mmO{nil}}{%
  \gurps@char@insertattr{%
    name={#1},%
    type=disadvantage,%
    level=#2,
    points=#3%
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\gurps@char@SpellOrSkill}
% Macro for skills or spells (since functionally they are the same in \gurps.)
%    \begin{macrocode}
\NewDocumentCommand{\gurps@char@SpellOrSkill}{mm}{
  \NewDocumentCommand{#1}{mom}{%
    \IfValueTF{##2}{%
      \makeatletter
      \luadirect{
        tmpone = \luastring{\unexpanded{##1}}
        tmptwo = \luastring{\unexpanded{##2}}
        tmpthree = \luastring{\unexpanded{##3}}
        basedon = tmptwo:gsub('/.*', '')
        difficulty = tmptwo:gsub('.*/', '')
        tex.sprint(
        [[\gurps@char@insertattr{]]
          .. [[name={]] .. tmpone .. [[},]]
          .. [[type=#2,]]
          .. [[basedon=]] .. basedon .. ','
          .. [[difficulty=]] .. difficulty .. ','
          .. [[level=]] .. tmpthree
          .. "}"
        )
      }
      \makeatother
    }{%
      \gurps@char@insertattr{%
        name={##1},%
        type=#2,%
        level=##3
      }%
    }%
  }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\skill}
%    \begin{macrocode}
\gurps@char@SpellOrSkill{\skill}{skill}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\spell}
%    \begin{macrocode}
\gurps@char@SpellOrSkill{\spell}{spell}
%    \end{macrocode}
% \end{macro}

%
%\subsubsection{Stat block formatting}
%\label{sec:stat-block-formatting}
%
% \begin{macro}{\charactertitle}
%   As a title for the character stats block, we define |\charactertitle|
%    \begin{macrocode}
\newcounter{charactertitle} % to keep LaTeX happy
\newcommand{\charactertitlemark}[1]{} % ditto
\newcommand\charactertitle{%
  \@startsection{charactertitle}%
  {100}%        level for secnumdepth and tocdepth
  {\z@}%       indentation
  {\topsep}%   space before
  {\topsep}%   space below
  {\raggedright\Large\bfseries}% format of the text
}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\charactersection}
%   For sections in the the character stats block, we define |\charactersection|
%    \begin{macrocode}
\newcounter{charactersection} % to keep LaTeX happy
\newcommand{\charactersectionmark}[1]{} % ditto
\newcommand\charactersection{%
  \@startsection{charactersection}%
    {101}%        level for secnumdepth and tocdepth
    {\z@}%       indentation
    {\topsep}%   space before
    {-1em}%   space below
    {\raggedright\normalsize\bfseries}% format of the text
}
% \NewDocumentCommand{\charactersection}{m}{%
%   \noindent\par\noindent\textbf{\large #1}\\\noindent%
% }
%    \end{macrocode}
% who's code is taken almost without change from |https://tex.stackexchange.com/questions/97565/flexible-vspace#97570|.
% \end{macro}
%
% \begin{environment}{charactertraitlist}
%  We define the |charactertraitlist| to list the traits. By default, this is an
%  |itemize*| from the |enumitem| package with some customisations
%    \begin{macrocode}
\NewDocumentEnvironment{charactertraitlist}{}
{\noindent\begin{itemize*}[itemjoin={{; }},label=,afterlabel={},midpenalty=0]}
  {\end{itemize*}}
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\gurps@char@print@attr}
% It's like this:
% \cs{gurps@char@print@attr}\oarg{level/diceexpr}\marg{name}\oarg{points}. This
% macro is usually called by the lua function |attr_to_tex| (which returns a
% string)
%    \begin{macrocode}
\NewDocumentCommand{\gurps@char@print@attr}{omo}{%
  \IfValueTF{#3}{%
    \DeclareDocumentCommand{\tmp@points}{}{[#3]}%
  }{%
    \DeclareDocumentCommand{\tmp@points}{}{}%
  }%
  \IfValueTF{#1}{%
    #2~#1\tmp@points%
  }{%
    #2\tmp@points%
  }%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\gurps@char@TraitListMaker}
%    \begin{macrocode}
\NewDocumentCommand{\gurps@char@TraitListMaker}{mm}{
  \NewDocumentCommand{#1}{}{%
    \makeatletter%
    \luadirect{traitlistmaker(#2, _GCHARACTERKEY)}%
    \makeatother%
  }%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@totalpoints}
%    \begin{macrocode}
\NewDocumentCommand{\gurps@char@totalpoints}{O{_}}{%
  \luadirect{tex.sprint(sum_points(\luastring{\unexpanded{#1}}))}~pt%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@advantages}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@advantages}{is_advantage}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@disadvantages}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@disadvantages}{is_disadvantage}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@skills}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@skills}{is_skill}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@spells}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@spells}{is_spell}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@basicattributes}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@basicattributes}{is_basic_attribute}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@secondarycharacteristics}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@secondarycharacteristics}{is_secondary_characteristic}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@properties}
%    \begin{macrocode}
\gurps@char@TraitListMaker{\gurps@char@properties}{is_property}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\gurps@char@checkandfixattrsandpoints}
%    \begin{macrocode}
\NewDocumentCommand{\gurps@char@checkandfixattrsandpoints}{}{%
  \luadirect{check_and_fix_attrs_and_points(_GCHARACTERKEY)}%
}
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\endinput
%</package>
%    \end{macrocode}
%\Finale
